{"version":3,"sources":["assets/logo.png","components/Header.js","sharedComponents/Button.js","sharedComponents/Input.js","validator.js","components/AddItem.js","constants.js","components/ShoppingList.js","App.js","index.js"],"names":["Header","className","src","logo","alt","Button","props","title","name","type","disabled","buttonType","buttonClass","push","join","onClick","e","Input","renderLabel","label","_onChange","onChange","item","handleBlurInput","setState","focusClass","this","errorObj","autoFocus","value","placeholder","reference","id","inputProps","inputClass","ref","onFocus","handleFocusInput","onBlur","error","React","Component","validateName","test","validateQuantity","isNaN","AddItem","onFieldChange","target","formInvalid","state","quantity","nameValidation","quantityValidation","parseInt","length","onValidate","onItemAdd","addedItem","fields","map","key","find","errorItem","fieldTypes","ShoppingList","listToDisplay","index","findIndex","listItem","runValidation","nameError","quantityError","onFieldBlur","onItemRemove","filterList","filter","alert","concat","renderAddContainer","getFields","renderItemFields","fieldItem","i","randomIndex","Math","floor","random","shoppingList","list","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf1d1939.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.56ce158f.png\";","import React from \"react\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"logo\" />\r\n      <label className=\"header__label\">Shopping List</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Reusable component\r\nimport React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  const { title, name, className, type, disabled, buttonType } = props;\r\n\r\n  let buttonClass = [\"button\"];\r\n\r\n  if (className) {\r\n    buttonClass.push(className);\r\n  }\r\n const  _onClick = (e) => {\r\n    const { onClick } = props;\r\n    if (onClick && typeof onClick === \"function\") {\r\n\t\tonClick();\r\n    }\r\n  };\r\n  if (buttonType) {\r\n    buttonClass.push(buttonType);\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={buttonClass.join(\" \")}\r\n      onClick={_onClick}\r\n      type={type}\r\n      disabled={disabled}\r\n      name={name}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","/**\r\n * Generic Input component\r\n */\r\nimport React from \"react\";\r\nclass Input extends React.Component {\r\n  renderLabel = () => (\r\n    <label className=\"input-field__label\">{this.props.label}</label>\r\n  );\r\n\r\n  _onChange = (e) => {\r\n    const { onChange, item } = this.props;\r\n    if (onChange && typeof onChange === \"function\") {\r\n      onChange(e, item);\r\n    }\r\n  };\r\n  handleBlurInput = (e) => {\r\n    this.setState({ focusClass: \"\" });\r\n    const { handleBlurInput, item } = this.props;\r\n    if (handleBlurInput && typeof handleBlurInput === \"function\") {\r\n      handleBlurInput(e, item);\r\n    }\r\n  };\r\n  handleBlurInput;\r\n  render() {\r\n    const {\r\n      type,\r\n      errorObj,\r\n      disabled,\r\n      autoFocus,\r\n      value,\r\n      placeholder,\r\n      name,\r\n      className,\r\n      reference,\r\n      id,\r\n      inputProps,\r\n    } = this.props;\r\n\r\n    let inputClass = [\"input-field\"];\r\n    if (className) {\r\n      inputClass.push(className);\r\n    }\r\n\r\n    if (disabled) {\r\n      inputClass.push(\"disabled\");\r\n    }\r\n\r\n    return (\r\n      <div className={inputClass.join(\" \")}>\r\n        <input\r\n          type={type ? type : \"text\"}\r\n          name={name}\r\n          value={value ? value : \"\"}\r\n          placeholder={placeholder}\r\n          onChange={this._onChange}\r\n          disabled={disabled}\r\n          ref={reference}\r\n          id={id}\r\n          {...inputProps}\r\n          onFocus={this.handleFocusInput}\r\n          onBlur={this.handleBlurInput}\r\n          autoFocus={autoFocus}\r\n        />\r\n        {errorObj ? <span className=\"error\">{errorObj.error}</span> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","export const validateName = (name) =>{\r\n    if(!name){\r\n        return {\r\n            name:'name',\r\n            error: 'name cannot be empty'\r\n        }\r\n    }\r\n    if(/^\\d+$/.test(name)){\r\n        return {\r\n            name:'name',\r\n            error: 'Name must be string'\r\n        }\r\n    }\r\n}\r\nexport const validateQuantity = (value) =>{\r\n    if(!/^\\d+$/.test(value)){\r\n        return {\r\n            name:'quantity',\r\n            error: value || isNaN(value)? 'Quantity must be number':'quantity cannot be empty'\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Input from \"../sharedComponents/Input\";\r\nimport Button from \"../sharedComponents/Button\";\r\n\r\nimport { validateName, validateQuantity } from \"../validator\";\r\nclass AddItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      quantity: null,\r\n      error: [],\r\n      addedItem: null,\r\n    };\r\n  }\r\n  onFieldChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      this.setState({ error: [] });\r\n    }\r\n    this.setState({ [name]: value });\r\n  };\r\n  formInvalid = () => {\r\n    const { name, quantity, error } = this.state;\r\n    const nameValidation = validateName(name);\r\n    const quantityValidation = validateQuantity(parseInt(quantity));\r\n    if (nameValidation) {\r\n      error.push(nameValidation);\r\n    }\r\n    if (quantityValidation) {\r\n      error.push(quantityValidation);\r\n    }\r\n    this.setState({ error });\r\n    return error.length !== 0;\r\n  };\r\n  onValidate = () => {\r\n    const { name, quantity, error } = this.state;\r\n    const nameValidation = validateName(name);\r\n    const quantityValidation = validateQuantity(parseInt(quantity));\r\n    if (nameValidation) {\r\n      error.push(nameValidation);\r\n    } else if (quantityValidation) {\r\n      error.push(quantityValidation);\r\n    }\r\n    this.setState({ error });\r\n  };\r\n  onItemAdd = () => {\r\n    if (this.formInvalid()) {\r\n      return;\r\n    }\r\n    const { onItemAdd } = this.props;\r\n    const { name, quantity } = this.state;\r\n    const item = {\r\n      name,\r\n      quantity,\r\n    };\r\n    this.setState({\r\n      name: \"\",\r\n      quantity: null,\r\n      error: [],\r\n      addedItem: item,\r\n    });\r\n    onItemAdd(item);\r\n  };\r\n  render() {\r\n    const { name, quantity, error } = this.state;\r\n    const fields = [\r\n      {\r\n        name: \"name\",\r\n        value: name,\r\n        type: \"text\",\r\n        placeholder: \"Enter name\",\r\n      },\r\n      {\r\n        name: \"quantity\",\r\n        value: quantity,\r\n        type: \"number\",\r\n        placeholder: \"Enter quantity\",\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"addItem\">\r\n        <h2 className=\"addItem__header\">Add new Item</h2>\r\n        <div className=\"addItem__fields\">\r\n          {fields.map((item, key) => {\r\n            const errorObj = error.find(\r\n              (errorItem) => errorItem.name === item.name\r\n            );\r\n            return (\r\n              <div className=\"addItem__fields-item\" key={key}>\r\n                <Input\r\n                  name={item.name}\r\n                  value={item.value}\r\n                  type={item.type}\r\n                  key={key}\r\n                  onChange={this.onFieldChange}\r\n                  placeholder={item.placeholder}\r\n                />\r\n                {errorObj ? (\r\n                  <span className=\"error\">{errorObj.error}</span>\r\n                ) : null}\r\n              </div>\r\n            );\r\n          })}\r\n          <Button title=\"Add item\" onClick={this.onItemAdd} id=\"addItem\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddItem;\r\n","export const DAFAULT_ARRAY_LENGTH = 10\r\nexport const fieldTypes = {\r\n    name:'name',\r\n    quantity:'quantity'\r\n}","import React, { Component } from \"react\";\r\nimport Button from \"../sharedComponents/Button\";\r\nimport Input from \"../sharedComponents/Input\";\r\nimport AddItem from \"./AddItem\";\r\n\r\nimport { DAFAULT_ARRAY_LENGTH, fieldTypes } from \"../constants\";\r\nimport shoppingList from \"../assets/data.json\";\r\nimport { validateName, validateQuantity } from \"../validator\";\r\n\r\nclass ShoppingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listToDisplay: [],\r\n      error: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const listToDisplay = [];\r\n    for (let i = 1; i <= DAFAULT_ARRAY_LENGTH; i++) {\r\n      const randomIndex = Math.floor(Math.random() * shoppingList.length);\r\n      const found = listToDisplay.find(item=>item.id===shoppingList[randomIndex].id)\r\n      if(!found){\r\n        listToDisplay.push(shoppingList[randomIndex]);\r\n      }\r\n    }\r\n    this.setState({ listToDisplay });\r\n  }\r\n  onFieldChange = (e, item) => {\r\n    const { listToDisplay } = this.state;\r\n    const { name, value } = e.target;\r\n    const index = listToDisplay.findIndex(\r\n      (listItem) => listItem.id === item.id\r\n    );\r\n    if (value) {\r\n      this.runValidation(name, value, item);\r\n      if (name === fieldTypes.name) {\r\n        listToDisplay[index][\"error\"] = {\r\n          ...listToDisplay[index][\"error\"],\r\n          nameError: null,\r\n        };\r\n      } else if (value && name === fieldTypes.quantity) {\r\n        listToDisplay[index][\"error\"] = {\r\n          ...listToDisplay[index][\"error\"],\r\n          quantityError: null,\r\n        };\r\n      }\r\n    }\r\n    listToDisplay[index][name] = value;\r\n    this.setState({ listToDisplay });\r\n  };\r\n  runValidation = (name, value, item) => {\r\n    const { listToDisplay } = this.state;\r\n    let nameValidation = null;\r\n    let quantityValidation = null;\r\n    const index = listToDisplay.findIndex(\r\n      (listItem) => listItem.id === item.id\r\n    );\r\n    if (name === fieldTypes.name) {\r\n      nameValidation = validateName(value);\r\n      listToDisplay[index][\"error\"] = {\r\n        ...listToDisplay[index][\"error\"],\r\n        nameError: nameValidation,\r\n      };\r\n    } else if (name === fieldTypes.quantity) {\r\n      quantityValidation = validateQuantity(parseInt(value));\r\n      listToDisplay[index][\"error\"] = {\r\n        ...listToDisplay[index][\"error\"],\r\n        quantityError: quantityValidation,\r\n      };\r\n    }\r\n    this.setState({ listToDisplay });\r\n  };\r\n  onFieldBlur = (e, item) => {\r\n    const { name, value } = e.target;\r\n    this.runValidation(name, value, item);\r\n  };\r\n  onItemRemove = (item) => {\r\n    const { listToDisplay } = this.state;\r\n    const filterList = listToDisplay.filter(\r\n      (listItem) => listItem.id !== item.id\r\n    )\r\n    this.setState({\r\n      listToDisplay: filterList\r\n    })\r\n    alert(\"Item removed successfully....\");\r\n  };\r\n  onItemAdd = (item) => {\r\n    const { listToDisplay } = this.state;\r\n    const length = listToDisplay.length;\r\n    this.setState({\r\n      listToDisplay: listToDisplay.concat({\r\n        ...item,\r\n        id: length + 1,\r\n      }),\r\n    });\r\n    alert(\"Item added successfully....\");\r\n  };\r\n  renderAddContainer = () => {};\r\n  getFields = (item) => {\r\n    return [\r\n      {\r\n        name: fieldTypes.name,\r\n        value: item.name,\r\n        type: \"text\",\r\n        error: item.error,\r\n        placeholder: \"Enter name\",\r\n      },\r\n      {\r\n        name: fieldTypes.quantity,\r\n        value: item.quantity,\r\n        type: \"number\",\r\n        error: item.error,\r\n        placeholder: \"Enter quantity\",\r\n      },\r\n    ];\r\n  };\r\n  renderItemFields = (fields, item) => {\r\n    return fields.map((fieldItem, index) => {\r\n      let errorObj = null;\r\n      if (fieldItem.error) {\r\n        if (fieldItem.name === fieldTypes.name) {\r\n          errorObj = fieldItem.error.nameError;\r\n        } else if (fieldItem.name === fieldTypes.quantity) {\r\n          errorObj = fieldItem.error.quantityError;\r\n        }\r\n      }\r\n      return (\r\n          <Input\r\n            name={fieldItem.name}\r\n            value={fieldItem.value}\r\n            key={index}\r\n            type={fieldItem.type}\r\n            item={item}\r\n            className=\"field\"\r\n            onChange={this.onFieldChange}\r\n            handleBlurInput={this.onFieldBlur}\r\n            errorObj={errorObj}\r\n            placeholder={fieldItem.placeholder}\r\n          />\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const { listToDisplay } = this.state;\r\n    if (!listToDisplay || listToDisplay.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"shoppingList\">\r\n        <h2 className=\"shoppingList__header\">Things to buy</h2>\r\n        <div className=\"shoppingList__list\">\r\n          {listToDisplay.map((item, key) => {\r\n            const fields = this.getFields(item);\r\n            return (\r\n              <div className=\"shoppingList__list-item\" key={key}>\r\n                {this.renderItemFields(fields, item)}\r\n                <Button\r\n                  title=\"Remove\"\r\n                  onClick={() => this.onItemRemove(item)}\r\n                  id={key}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <AddItem list={listToDisplay} onItemAdd={this.onItemAdd} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ShoppingList;\r\n","import Header from \"./components/Header\";\nimport ShoppingList from \"./components/ShoppingList\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ShoppingList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './styles/index.scss'\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}